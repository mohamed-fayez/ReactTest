{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/serach-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handelChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,kBCEFA,EAAO,SAACC,GAElB,OAAO,sBAAKC,UAAU,iBAAf,UACO,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA6BL,EAAMI,QAAQE,MAAlCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCJtBC,G,MAAW,SAACR,GAEtB,OAAO,qBAAKC,UAAU,WAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJ3CM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAEpC,OAAO,qBAAKZ,UAAU,GAAf,SACD,uBAAOa,KAAK,SAASF,YAAaA,EAAcG,SAAUF,QCkCpDG,E,kDAjCb,aAAc,IAAD,8BACX,gBAeFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAfpC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAC3BT,SAASkB,S,oBAOb,WACE,MAA8BC,KAAKN,MAA5Bb,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAGA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACnG,OACE,sBAAK9B,UAAU,MAAf,UACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC1D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.45d1bd0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './card.style.css'\nexport const Card = (props) =>{\n   \n   return <div className=\"card-container\">\n                 <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n                 <h2 key={props.monster.id}>{ props.monster.name}</h2>\n                 <p>{props.monster.email}</p>\n       </div>\n}","import React from 'react'\nimport { Card } from '../card/card.component'\nimport './cardlist.styles.css'\nexport const CardList = (props) =>{\n    \n   return <div className=\"cardList\">\n       {props.monsters.map(monster=> <Card key={monster.id} monster={monster}></Card>)}\n       </div>\n}","import React from 'react'\nimport './serach-box.style.css'\nexport const SearchBox = ({placeholder,handelChange}) => {\n   \n   return <div className=\"\">\n         <input type=\"serach\" placeholder={placeholder}  onChange={handelChange}/>\n       </div>\n}","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/serach-box.component'\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField:\"\",\n    }\n   \n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({\n      monsters:users\n    }))\n  }\n\n  handelChange=(e) =>{\n    this.setState({searchField:e.target.value});\n  }\n  render(){\n    const {monsters,searchField}= this.state;\n    const filteredMonsters = monsters.filter(monster=> monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n      <SearchBox placeholder=\"Serach monsters\" handelChange={this.handelChange}></SearchBox>\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n       \n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}